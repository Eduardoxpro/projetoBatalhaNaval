

        import java.util.InputMismatchException;
        import java.util.Random;
        import java.util.Scanner;

public class batalhaNaval {

    static String nomeJogador1, nomejogador2;
    static int largura, altura, quantidadeDeSubmarinos, limiteMaximoDeSubmarinos;
    static int tabuleiroJogador1[][], tabuleiroJogador2[][];
    static Scanner input = new Scanner(System.in);

    public static void obterTamanhoDosTabuleiros() {

        for (; ; ) {
            boolean tudoOk = false;
            try {
                System.out.println("Digite a altura do tabuleiro: ");
                largura = input.nextInt();
                System.out.println("Digite o comprimento do tabuleiro: ");
                altura = input.nextInt();
                tudoOk = true;
            } catch (InputMismatchException erro) {
                System.out.println("Digite um valor numérico");
            }
            if (tudoOk) {
                break;
            }
        }
    }

    public static void inputDeNomeDosJogadores() {
        System.out.println("Digite o nome do Jogador1 ");
        nomeJogador1 = input.next();
        System.out.println("Digite o nome do Jogador2 ");
        nomejogador2 = input.next();

    }

    public static void calcularQuantidadeMaximaDeSubmarinosNoJogo() {
        limiteMaximoDeSubmarinos = (largura * altura) / 3;
    }

    public static void iniciandoOsTamanhosDosTabuleiros() {
        tabuleiroJogador1 = retornarNovoTabuleiroVazio();
        tabuleiroJogador2 = retornarNovoTabuleiroVazio();
    }

    public static int[][] retornarNovoTabuleiroVazio() {
        return new int[largura][altura];
    }

    public static void obterQuantidadeDeSubmarinosNoJogo() {
        System.out.println("Digite a quantidade de Submarinos do jogo:");
        System.out.println("Max: " + limiteMaximoDeSubmarinos + " navios");
        quantidadeDeSubmarinos = input.nextInt();
        if (quantidadeDeSubmarinos < 1 && quantidadeDeSubmarinos > limiteMaximoDeSubmarinos) {
            quantidadeDeSubmarinos = limiteMaximoDeSubmarinos;
        }
    }

    public static int[][] retornarNovoTabuleiroComOsSubmarinos() {
        int novoTabuleiro[][] = retornarNovoTabuleiroVazio();
        int quantidadeRestanteDeSubmarinos = quantidadeDeSubmarinos;
        int x = 0, y = 0;
        Random numeroAleatorio = new Random();
        do {
            x = 0;
            y = 0;
            for (int[] linha : novoTabuleiro) {
                for (int coluna : linha) {
                    if (numeroAleatorio.nextInt(100) <= 10) {
                        if (coluna == 0) {
                            novoTabuleiro[x][y] = 1;
                            quantidadeRestanteDeSubmarinos--;
                            break;
                        }
                        if (quantidadeRestanteDeSubmarinos < 0) {
                            break;
                        }
                    }
                    y++;
                }
                y = 0;
                x++;
                if (quantidadeRestanteDeSubmarinos <= 0) {
                    break;
                }
            }
        } while (quantidadeRestanteDeSubmarinos > 0);
        return novoTabuleiro;
    }

    public static void inserirOsNaviosNosTabuleirosDosJogadores() {
        tabuleiroJogador1 = retornarNovoTabuleiroComOsSubmarinos();
        tabuleiroJogador2 = retornarNovoTabuleiroComOsSubmarinos();
    }

    public static void visualizarLetrasDaColunaDoTabuleiro() {

        char letrasDaColuna = 65;
        String letrasDoTabuleiro;
        if (altura < 10) {
            letrasDoTabuleiro = "   ";
        } else {
            letrasDoTabuleiro = "   ";

        }
        for (int i = 0; i < altura; i++) {
            letrasDoTabuleiro += (letrasDaColuna++) + " ";
        }
        System.out.println(letrasDoTabuleiro);

    }

    public static void visualizarTabuleiro(String nomeDoJogador, int[][] tabuleiro, boolean seuTabuleiro) {


        System.out.println("|-----" + nomeDoJogador + "-----|");
        visualizarLetrasDaColunaDoTabuleiro();
        String linhaDoTabuleiro = "";
        int numeroDaLinha = 1;
        for (int[] linha : tabuleiro) {
            if (numeroDaLinha < 10) {
                linhaDoTabuleiro = (numeroDaLinha++) + " |";
            } else {
                linhaDoTabuleiro = (numeroDaLinha++) + "|";
            }
            for (int coluna : linha) {
                switch (coluna) {
                    case 0: // Vazio
                        linhaDoTabuleiro += " |";
                        break;
                    case 1: // Submarino
                        if (seuTabuleiro) {
                            linhaDoTabuleiro += "S|";
                            break;
                        } else {
                            linhaDoTabuleiro += " |";
                            break;
                        }
                    case 2: // Errou o Alvo
                        linhaDoTabuleiro += "X|";
                        break;

                    case 3: // Acertou o alvo
                        linhaDoTabuleiro += "D|";
                        break;
                }
            }
            System.out.println(linhaDoTabuleiro);
        }
    }

    public static void visualizarTabuleiroDosJogadores() {
        visualizarTabuleiro(nomeJogador1, tabuleiroJogador1, true);
        visualizarTabuleiro(nomejogador2, tabuleiroJogador2, false);


    }



    public static boolean verificaçãoDePosiçãoDeTiroDosJogadores(int [] posicoes) {
         boolean retorno = true;
        if (posicoes[0] > largura -1){
            retorno = false;
            System.out.println("A posição das letras não pode ser maior que " + (char) (largura + 64));
        }
        if (posicoes [1] > altura){
            System.out.println("A posição numérica não pode ser maior que " + altura );
        }
        return retorno;

    }


    public static String inputDeValorRegistradoPeloJogador(){
        System.out.println("Digite a posição do seu tiro:");
        return input.next();
    }

    public static boolean validarTiroJogador(String tiroJogador) {
        int quantidadeDeNumeros = (altura > 10) ? 2 : 1;
        String expressaoDeVerificacao = "^[A-Za-z]{1}[0-9]{"
                + quantidadeDeNumeros + "}$";
        return tiroJogador.matches(expressaoDeVerificacao);

    }
    public static int[] retornarPosicoesDigitadasPorJogador(String tiroJogador){

        String tiro = tiroJogador.toLowerCase();
        int[] retorno = new int[2];
        retorno [0] =  tiro.charAt(0) - 97;
        retorno [1] =  Integer.parseInt(tiro.substring(1)) -1;
        return retorno;

    }
    public static void acaoJogador() {


        String tiroJogador = inputDeValorRegistradoPeloJogador();

        if (validarTiroJogador(tiroJogador)) {
            String tiro = tiroJogador.toLowerCase();
            int [] posicoes = retornarPosicoesDigitadasPorJogador(tiroJogador);
            if(verificaçãoDePosiçãoDeTiroDosJogadores(posicoes)){
                System.out.println("É valida");
            }

        } else {
            System.out.println("Posição Invalida");
        }

    }


    public static void main(String[] args) {

        inputDeNomeDosJogadores();
        obterTamanhoDosTabuleiros();
        calcularQuantidadeMaximaDeSubmarinosNoJogo();
        iniciandoOsTamanhosDosTabuleiros();
        obterQuantidadeDeSubmarinosNoJogo();
        inserirOsNaviosNosTabuleirosDosJogadores();
        for (;;){
            visualizarTabuleiroDosJogadores();
            acaoJogador();
        }




        input.close();

        }
    }
